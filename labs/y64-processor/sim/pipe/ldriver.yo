                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f48805000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f60803000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7f800000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | # Modified version of ncopy.ys
                            | # 
                            | # ID: 11037
                            | # 
                            | # Name: $NAME
                            | # 
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | ##################################################################
                            | # You can modify this portion
                            | # All right, all right
                            | # Loop header
0x032: 6300                 | 		xorq %rax,%rax			# count = 0;
0x034: c0f20200000000000000 | 		iaddq $2, %rdx
0x03e: c0f2feffffffffffffff | Loop:	iaddq $-2, %rdx			# len--
0x048: 72c900000000000000   | 		jl Over
0x051: 73f400000000000000   | 		je Done
0x05a: 50a70000000000000000 | 		mrmovq (%rdi), %r10		# read val from src...
0x064: 50b70800000000000000 | 		mrmovq 8(%rdi), %r11	# read val from src...
0x06e: 40a60000000000000000 | 		rmmovq %r10, (%rsi)		# ...and store it to dst
0x078: 40b60800000000000000 | 		rmmovq %r11, 8(%rsi)	# ...and store it to dst
0x082: 62aa                 | 		andq %r10, %r10			# val <= 0?
0x084: 719700000000000000   | 		jle NoAdd1				# if so, goto noadd
0x08d: c0f00100000000000000 | 		iaddq $1, %rax			# count++
                            | 		# Directly use iaddq rather than add/sub registers
0x097: 62bb                 | NoAdd1:	andq %r11, %r11
0x099: 71ac00000000000000   | 		jle NoAdd2
0x0a2: c0f00100000000000000 | 		iaddq $1, %rax
0x0ac:                      | NoAdd2:	# Directly use iaddq rather than add/sub registersS33
0x0ac: c0f71000000000000000 | 		iaddq $16, %rdi			# src++
                            | 		# Directly use iaddq rather than add/sub registers
0x0b6: c0f61000000000000000 | 		iaddq $16, %rsi			# dst++
0x0c0: 703e00000000000000   | 		jmp Loop				# goto Loop:
0x0c9: 6222                 | Over:	andq %rdx, %rdx
0x0cb: 73f400000000000000   | 		je Done
0x0d4: 50a70000000000000000 | 		mrmovq (%rdi), %r10
0x0de: 40a60000000000000000 | 		rmmovq %r10, (%rsi)
0x0e8: 62aa                 | 		andq %r10, %r10
                            | 		# jle Done
0x0ea: c0f00100000000000000 | 		iaddq $1, %rax			# count++
                            | # OK, OK
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x0f4:                      | Done:
0x0f4: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x0f5:                      | End:
                            | #/* $end ncopy-ys */
0x0f5:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x0f8:                      | 	.align 8
0x0f8:                      | src:
0x0f8: ffffffffffffffff     | 	.quad -1
0x100: feffffffffffffff     | 	.quad -2
0x108: 0300000000000000     | 	.quad 3
0x110: 0400000000000000     | 	.quad 4
0x118: 0500000000000000     | 	.quad 5
0x120: faffffffffffffff     | 	.quad -6
0x128: 0700000000000000     | 	.quad 7
0x130: 0800000000000000     | 	.quad 8
0x138: f7ffffffffffffff     | 	.quad -9
0x140: f6ffffffffffffff     | 	.quad -10
0x148: 0b00000000000000     | 	.quad 11
0x150: 0c00000000000000     | 	.quad 12
0x158: 0d00000000000000     | 	.quad 13
0x160: f2ffffffffffffff     | 	.quad -14
0x168: f1ffffffffffffff     | 	.quad -15
0x170: 1000000000000000     | 	.quad 16
0x178: 1100000000000000     | 	.quad 17
0x180: eeffffffffffffff     | 	.quad -18
0x188: edffffffffffffff     | 	.quad -19
0x190: ecffffffffffffff     | 	.quad -20
0x198: ebffffffffffffff     | 	.quad -21
0x1a0: eaffffffffffffff     | 	.quad -22
0x1a8: e9ffffffffffffff     | 	.quad -23
0x1b0: 1800000000000000     | 	.quad 24
0x1b8: e7ffffffffffffff     | 	.quad -25
0x1c0: 1a00000000000000     | 	.quad 26
0x1c8: 1b00000000000000     | 	.quad 27
0x1d0: e4ffffffffffffff     | 	.quad -28
0x1d8: 1d00000000000000     | 	.quad 29
0x1e0: 1e00000000000000     | 	.quad 30
0x1e8: 1f00000000000000     | 	.quad 31
0x1f0: e0ffffffffffffff     | 	.quad -32
0x1f8: dfffffffffffffff     | 	.quad -33
0x200: deffffffffffffff     | 	.quad -34
0x208: ddffffffffffffff     | 	.quad -35
0x210: 2400000000000000     | 	.quad 36
0x218: dbffffffffffffff     | 	.quad -37
0x220: daffffffffffffff     | 	.quad -38
0x228: d9ffffffffffffff     | 	.quad -39
0x230: 2800000000000000     | 	.quad 40
0x238: d7ffffffffffffff     | 	.quad -41
0x240: d6ffffffffffffff     | 	.quad -42
0x248: 2b00000000000000     | 	.quad 43
0x250: 2c00000000000000     | 	.quad 44
0x258: 2d00000000000000     | 	.quad 45
0x260: d2ffffffffffffff     | 	.quad -46
0x268: 2f00000000000000     | 	.quad 47
0x270: 3000000000000000     | 	.quad 48
0x278: 3100000000000000     | 	.quad 49
0x280: ceffffffffffffff     | 	.quad -50
0x288: cdffffffffffffff     | 	.quad -51
0x290: 3400000000000000     | 	.quad 52
0x298: 3500000000000000     | 	.quad 53
0x2a0: caffffffffffffff     | 	.quad -54
0x2a8: c9ffffffffffffff     | 	.quad -55
0x2b0: c8ffffffffffffff     | 	.quad -56
0x2b8: c7ffffffffffffff     | 	.quad -57
0x2c0: 3a00000000000000     | 	.quad 58
0x2c8: c5ffffffffffffff     | 	.quad -59
0x2d0: 3c00000000000000     | 	.quad 60
0x2d8: 3d00000000000000     | 	.quad 61
0x2e0: 3e00000000000000     | 	.quad 62
0x2e8: 3f00000000000000     | 	.quad 63
0x2f0: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x300:                      | 	.align 16
0x300:                      | Predest:
0x300: fadebc0000000000     | 	.quad 0xbcdefa
0x308:                      | dest:
0x308: abefcd0000000000     | 	.quad 0xcdefab
0x310: abefcd0000000000     | 	.quad 0xcdefab
0x318: abefcd0000000000     | 	.quad 0xcdefab
0x320: abefcd0000000000     | 	.quad 0xcdefab
0x328: abefcd0000000000     | 	.quad 0xcdefab
0x330: abefcd0000000000     | 	.quad 0xcdefab
0x338: abefcd0000000000     | 	.quad 0xcdefab
0x340: abefcd0000000000     | 	.quad 0xcdefab
0x348: abefcd0000000000     | 	.quad 0xcdefab
0x350: abefcd0000000000     | 	.quad 0xcdefab
0x358: abefcd0000000000     | 	.quad 0xcdefab
0x360: abefcd0000000000     | 	.quad 0xcdefab
0x368: abefcd0000000000     | 	.quad 0xcdefab
0x370: abefcd0000000000     | 	.quad 0xcdefab
0x378: abefcd0000000000     | 	.quad 0xcdefab
0x380: abefcd0000000000     | 	.quad 0xcdefab
0x388: abefcd0000000000     | 	.quad 0xcdefab
0x390: abefcd0000000000     | 	.quad 0xcdefab
0x398: abefcd0000000000     | 	.quad 0xcdefab
0x3a0: abefcd0000000000     | 	.quad 0xcdefab
0x3a8: abefcd0000000000     | 	.quad 0xcdefab
0x3b0: abefcd0000000000     | 	.quad 0xcdefab
0x3b8: abefcd0000000000     | 	.quad 0xcdefab
0x3c0: abefcd0000000000     | 	.quad 0xcdefab
0x3c8: abefcd0000000000     | 	.quad 0xcdefab
0x3d0: abefcd0000000000     | 	.quad 0xcdefab
0x3d8: abefcd0000000000     | 	.quad 0xcdefab
0x3e0: abefcd0000000000     | 	.quad 0xcdefab
0x3e8: abefcd0000000000     | 	.quad 0xcdefab
0x3f0: abefcd0000000000     | 	.quad 0xcdefab
0x3f8: abefcd0000000000     | 	.quad 0xcdefab
0x400: abefcd0000000000     | 	.quad 0xcdefab
0x408: abefcd0000000000     | 	.quad 0xcdefab
0x410: abefcd0000000000     | 	.quad 0xcdefab
0x418: abefcd0000000000     | 	.quad 0xcdefab
0x420: abefcd0000000000     | 	.quad 0xcdefab
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468: abefcd0000000000     | 	.quad 0xcdefab
0x470: abefcd0000000000     | 	.quad 0xcdefab
0x478: abefcd0000000000     | 	.quad 0xcdefab
0x480: abefcd0000000000     | 	.quad 0xcdefab
0x488: abefcd0000000000     | 	.quad 0xcdefab
0x490: abefcd0000000000     | 	.quad 0xcdefab
0x498: abefcd0000000000     | 	.quad 0xcdefab
0x4a0: abefcd0000000000     | 	.quad 0xcdefab
0x4a8: abefcd0000000000     | 	.quad 0xcdefab
0x4b0: abefcd0000000000     | 	.quad 0xcdefab
0x4b8: abefcd0000000000     | 	.quad 0xcdefab
0x4c0: abefcd0000000000     | 	.quad 0xcdefab
0x4c8: abefcd0000000000     | 	.quad 0xcdefab
0x4d0: abefcd0000000000     | 	.quad 0xcdefab
0x4d8: abefcd0000000000     | 	.quad 0xcdefab
0x4e0: abefcd0000000000     | 	.quad 0xcdefab
0x4e8: abefcd0000000000     | 	.quad 0xcdefab
0x4f0: abefcd0000000000     | 	.quad 0xcdefab
0x4f8: abefcd0000000000     | 	.quad 0xcdefab
0x500:                      | Postdest:
0x500: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x508:                      | .align 8
                            | # Run time stack
0x508: 0000000000000000     | 	.quad 0
0x510: 0000000000000000     | 	.quad 0
0x518: 0000000000000000     | 	.quad 0
0x520: 0000000000000000     | 	.quad 0
0x528: 0000000000000000     | 	.quad 0
0x530: 0000000000000000     | 	.quad 0
0x538: 0000000000000000     | 	.quad 0
0x540: 0000000000000000     | 	.quad 0
0x548: 0000000000000000     | 	.quad 0
0x550: 0000000000000000     | 	.quad 0
0x558: 0000000000000000     | 	.quad 0
0x560: 0000000000000000     | 	.quad 0
0x568: 0000000000000000     | 	.quad 0
0x570: 0000000000000000     | 	.quad 0
0x578: 0000000000000000     | 	.quad 0
0x580: 0000000000000000     | 	.quad 0
                            | 
0x588:                      | Stack:
